
* TODO: veja abaixo, em "TODO" file. Aproveite XD!

Seg Dec 28 09:10:16 2020    <benbenjamin554@gmail.com>

    * Foram modificados a classe personagem e
    particionado um pouco deixando mais flexivel.

    * Movement.cs: ele implementa tudo relacionado a 
    a movimento do personam, a divisão é necessaria
    para o 2d e 3d

    *Inventory/Inventory.cs: criei uma classe
    resṕonsavel por metodos de inventario, é 
    necessario pois ficar colocando codigo aqui e na 
    esquina de adicionar ou remover nao fica legal XD

Seg Dec 28 11:10:16 2020    <benbenjamin554@gmail.com>

    * Ja foi defindo a interface de items de inventario,
    tambem separei o inventario em si de seus item em pastas
    separadas

    * Item/IInventoryItem.cs: a interface que define os metodos
    que todo item de inventario deve ter. eu pretendo modificar
    os nome e separar mais por falta de tempo é isso

    *Exemplo_Inventory_Item: eu com mais detalhes explico
    item de inventario e tal
    
Seg Dec 28 12:10:30 2020    <benbenjamin554@gmail.com>

    *Inventory/InventoryItem.cs: um item de inventario generico
    que o torna toda classe que o extenda como adicionavel ao 
    inventario sem ter que adicionar um metodo, claro voce pode
    dar override nos metodos dele.
    
    *Inventory/Inventory.cs: fiz alguns ajustes nele adicionando
    metodo de peguar por index
    
    *Item/*.cs: foram removidos os exemplos e simplficado classes, 
    e alguns foram movidos a pasta inventario
    
    * TODO: criar classe de item, entretanto a definição de um item em sí 
    precisa ser elaborada. ex(todos os items podem estar no inventario).
    
    * TODO: adicionar metodo de remover
    
    * TODO: adicionar metodo de procurar
    
    * TODO: adicionar metodo de verificar se existe na lista
    

Seg Dec 28 16:09:12 2020    <ignaciopunto102@outlook.com>

    * Adicionei o sistema de Inventario graico, só é nessesario
    conectar com a logica, mais todo o escopo e as molduras dos
    items já estao no projeto

    *Sprites provisorios adicionados na GUI do jogo

    *Codigo de abertura do inventario é o input.getKey("I")

Ter Dec 29 02:49:33 2020    <ignaciopunto102@outlook.com>

    * Depois de algums testes, o Scene 2DPrototype esta funcionando
    algumas modificações de organização foram adicionadas

    * Sprite Editor adicionado

    * Novas texturas

    * Sistema de Caminhada + Sprint

    * Sistema de orientação de animação pendente

Ter Dec 29 11:32:12 2020    <benbenjamin554@gmail.com>

    *Player.cs: removido atributo inventario, o plano é 
    que ele seja adicionado como componente tendo acesso global
    e flexiblizando o acesso a ele

    *Inventory.cs: nome das funções foram trocadas para o ingles 
    por convenção e proximidade com banco de dados(CRUD), tambem 
    foram adicionados checagem de acesso (out of bounds).

    *PlayerInventory.cs: bug com acesso out of bounds arrumando,
    classe tambem foi simplificada para receber a classe de
    inventario

    *InventoryComponent.cs: foi criado um componente para abstrair
    a classe inventario e que possa ser acessada globalmente, mantendo eles separados

    *TODO: adicionar componente de inventario a usuario, ao inves
    de no PlayerInventory    
    
Ter Dec 29 12:32:12 2020    <benbenjamin554@gmail.com>

    *PlayerInventory.cs: adicionado sistema de inventario a gui,
    entretanto é necessario mais testes.

    *TODO: adicionar sistema de clique em itens no inventario

Ter Dec 29 17:11:08 2020    <benbenjamin554@gmail.com>

    *PlayerInventory.cs: arrumado bug com objeto nulo

Ter Dec 29 20:35:48 2020    <benbenjamin554@gmail.com>

    *InventoryButton.cs: classe responsavel por linkar
    botão com item de inventario.

    *PlayerInventory.cs: simplificado função de start e flexiblizando
    relação de Gameobject(botão) e Classe de InventarioItem.
    
Ter Dec 30 14:53:48 2020    <benbenjamin554@gmail.com>

    *PlayerInventory.cs: Adicionado teste de add de
    item ao inventario.

    *Pressione V para adicionar 
    ao inventario

    *o botão I alem de abrir recarrega o inventario

Ter Dec 30 20:47:14 2020    <benbenjamin554@gmail.com>

    *Invetory.cs: classe simplificada

    *InvetoryComponent.cs: removida

    *InvetoryButton.cs: substituida por um struc em PlayerInventory

    *Items: foram de sua pasta, para direto a de items

Ter Dec 31 10:47:14 2020    <benbenjamin554@gmail.com>

    *Icons: removido classe e pasta, com o novo sistema de items,
    torna-se desnecessario.

    *PlayerInventory.cs: slots[] se tornou apenas um struct de id e gameobject

    *PlayerInventory.cs: adicionado sistema de eventos, qualquer classe 
    que se increva(subscribe) em inventario pode receber atualizações
    do inventario instataneamente

    *PlayerInventory.cs: documentação de eventos adicionada

Ter Dec 31 18:03:11 2020    <benbenjamin554@gmail.com>

    *Event: Criada pasta que contem codigo relacinado a
            ações no mundo.
    
    *ColissionAddItem.cs: classe adiciona item no inventario 
                          do player
    
    *Toque no bloco com a chave para receber o item

    
