
* TODO: veja abaixo, em "TODO" file. Aproveite XD!

Seg Dec 28 09:10:16 2020    <benbenjamin554@gmail.com>

    * Foram modificados a classe personagem e
    particionado um pouco deixando mais flexivel.

    * Movement.cs: ele implementa tudo relacionado a 
    a movimento do personam, a divisão é necessaria
    para o 2d e 3d

    *Inventory/Inventory.cs: criei uma classe
    resṕonsavel por metodos de inventario, é 
    necessario pois ficar colocando codigo aqui e na 
    esquina de adicionar ou remover nao fica legal XD

Seg Dec 28 11:10:16 2020    <benbenjamin554@gmail.com>

    * Ja foi defindo a interface de items de inventario,
    tambem separei o inventario em si de seus item em pastas
    separadas

    * Item/IInventoryItem.cs: a interface que define os metodos
    que todo item de inventario deve ter. eu pretendo modificar
    os nome e separar mais por falta de tempo é isso

    *Exemplo_Inventory_Item: eu com mais detalhes explico
    item de inventario e tal
    
Seg Dec 28 12:10:30 2020    <benbenjamin554@gmail.com>

    *Inventory/InventoryItem.cs: um item de inventario generico
    que o torna toda classe que o extenda como adicionavel ao 
    inventario sem ter que adicionar um metodo, claro voce pode
    dar override nos metodos dele.
    
    *Inventory/Inventory.cs: fiz alguns ajustes nele adicionando
    metodo de peguar por index
    
    *Item/*.cs: foram removidos os exemplos e simplficado classes, 
    e alguns foram movidos a pasta inventario
    
    * TODO: criar classe de item, entretanto a definição de um item em sí 
    precisa ser elaborada. ex(todos os items podem estar no inventario).
    
    * TODO: adicionar metodo de remover
    
    * TODO: adicionar metodo de procurar
    
    * TODO: adicionar metodo de verificar se existe na lista
    
    
    
    
